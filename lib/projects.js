// Generated by CoffeeScript 2.3.0
var Project, cush, evalFile, fs, path, projects, wch;

({evalFile} = require('./utils'));

cush = require('cush');

path = require('path');

wch = require('wch');

fs = require('fs');

cush.projects = projects = Object.create(null);

cush.project = function(root) {
  return projects[root] || (projects[root] = new Project(root));
};

Project = class Project {
  constructor(root) {
    var configPath;
    configPath = path.join(root, 'cush.config.js');
    this.root = cush.package(root);
    this.config = evalFile(configPath) || {};
    this.bundles = new Set;
    this.watcher = wch.stream(root, {
      only: ['cush.config.js']
    }).on('data', (evt) => {
      this.config = evalFile(configPath) || {};
      return this.bundles.forEach(function(bundle) {
        bundle._unloadModules();
        return bundle._configure();
      });
    });
  }

  drop(bundle) {
    if (!arguments.length) {
      this.bundles.forEach(function(bundle) {
        return bundle.destroy();
      });
      return true;
    }
    this.bundles.delete(bundle);
    if (this.bundles.size === 0) {
      this.watcher.destroy();
      return delete projects[this.root.path];
    }
  }

};
