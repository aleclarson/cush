// Generated by CoffeeScript 2.3.1
var Bundle, bundles, methods;

Bundle = require('./Bundle');

bundles = {};

methods = {
  loadBundle: function(props) {
    bundles[props.id] = new Bundle(props);
  },
  loadAsset: function(name, root, bundleId) {
    return bundles[bundleId]._loadAsset(name, root);
  },
  dropPackage: function(root, bundleId) {
    return delete bundles[bundleId].packages[root];
  },
  dropBundle: function(bundleId) {
    return delete bundles[bundleId];
  },
  printStats: function(bundleId) {
    return bundles[bundleId]._printStats();
  },
  request: async function(id, msg) {
    var err, result;
    try {
      result = (await methods[msg[0]](...msg.slice(1)));
    } catch (error) {
      err = error;
      err = Object.assign({
        message: err.message,
        stack: err.stack
      }, err);
      process.send(['response', id, err]);
      return;
    }
    process.send(['response', id, null, result]);
  }
};

process.on('message', function(msg) {
  methods[msg[0]](msg[1], msg[2], msg[3]);
});

process.on('disconnect', function() {
  process.send = function() {}; // no-op
});
