// Generated by CoffeeScript 2.3.1
var cush, findPackage, fs, merge, path, resolveFormat, sha256, uhoh;

({findPackage, merge, sha256, uhoh} = require('./utils'));

cush = require('cush');

path = require('path');

fs = require('saxon/sync');

// Bundle constructor
cush.bundle = function(main, opts) {
  var Bundle, base, bundle, ext, file, id, pack, project, root;
  if (!opts || typeof opts.target !== 'string') {
    uhoh('`target` option must be a string', 'NO_TARGET');
  }
  if (!(ext = path.extname(main))) {
    uhoh('`main` has no extension: ' + main, 'BAD_MAIN');
  }
  if (!path.isAbsolute(main)) {
    main = path.resolve(main);
  }
  if (!(id = opts.id)) {
    id = sha256(main, 10) + '.' + opts.target;
    if (opts.dev) {
      id += '.dev';
    }
    opts.id = id;
  }
  // Find the main module.
  file = main.slice(0, -ext.length) + '.' + opts.target + ext;
  if (!fs.isFile(file) && !fs.isFile(file = main)) {
    uhoh('`main` does not exist: ' + main, 'BAD_MAIN');
  }
  if (!(root = findPackage(main))) {
    uhoh('`main` has no package: ' + main, 'BAD_MAIN');
  }
  // Load the project.
  project = cush.project(root);
  opts.format || (opts.format = project.get(main).format);
  if (!(Bundle = opts.format || resolveFormat(main))) {
    uhoh('`main` has no bundle format: ' + main, 'NO_FORMAT');
  }
  // Create the bundle.
  bundle = new Bundle(opts);
  // Load the root package.
  pack = bundle._loadPackage(root);
  bundle.root = pack;
  // Load the main module.
  main = path.relative(root, file);
  bundle.main = bundle._loadAsset(main, pack);
  (base = pack.assets)[main] || (base[main] = bundle.main);
  // Watch the project.
  bundle.project = project.watch();
  project.bundles.add(bundle);
  return bundle;
};


// Helpers

resolveFormat = function(main) {
  var ext, format, id, ref;
  ext = path.extname(main);
  ref = cush.formats;
  for (id in ref) {
    format = ref[id];
    if (format.exts.includes(ext)) {
      return format;
    }
  }
};
