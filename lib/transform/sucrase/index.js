// Generated by CoffeeScript 2.3.0
var cush, isFlow, jsxRE, mapSources, path, sucrase, transform, tsRE;

({mapSources} = require('../../utils'));

sucrase = require('@cush/sucrase').transform;

cush = require('cush');

path = require('path');

tsRE = /^\.tsx?$/;

jsxRE = /^\.(?:t|j)sx$/;

// TODO: customizable `jsxPragma`
transform = function(file, pack) {
  var err, filename, res, tforms;
  if (file._sucrase === file.time) {
    return;
  }
  tforms = ['imports'];
  if (jsxRE.test(file.ext)) {
    tforms.push('jsx');
  }
  if (tsRE.test(file.ext)) {
    tforms.push('typescript');
  } else if (isFlow(pack)) {
    tforms.push('flow');
  }
  filename = pack.resolve(file);
  try {
    res = sucrase(file.content, {
      filePath: filename,
      transforms: tforms,
      sourceMapOptions: {},
      enableLegacyBabel5ModuleInterop: true
    });
  } catch (error) {
    err = error;
    cush.emit('warning', {
      message: 'sucrase threw an error: ' + (cush.verbose && err.stack || err.message),
      file: filename
    });
    return;
  }
  mapSources(file, res);
  file.ext = '.js';
  file._sucrase = file.time;
};

isFlow = function(pack) {
  var deps;
  deps = pack.data.devDependencies;
  return Boolean(deps && deps['flow-bin']);
};

exports['.js'] = exports['.ts'] = exports['.jsx'] = exports['.tsx'] = transform;
