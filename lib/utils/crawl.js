// Generated by CoffeeScript 2.3.0
var crawl, dotRelativeRE, follow, fs, path, recrawl, relative;

relative = require('@cush/relative');

recrawl = require('recrawl');

path = require('path');

fs = require('fs');

crawl = function(root, files, opts) {
  return recrawl(opts)(root, function(file) {
    var target;
    if (files[file]) {
      return;
    }
    if (target = follow(path.join(root, file))) {
      target = path.relative(root, target);
      if (target[0] === '.') {
        return;
      }
    }
    files[file] = target || true;
  });
};

module.exports = crawl;

// paths equal to "." or ".."
// paths starting with "./" or "../"
dotRelativeRE = /^\.?\.(?:\/|$)/;

// 1-deep symlinks only
follow = function(link) {
  var err, target;
  try {
    target = fs.readlinkSync(link);
    // absolute links are ignored
    if (path.isAbsolute(target)) {
      return null;
    }
    if (!dotRelativeRE.test(target)) {
      target = './' + target;
    }
    // resolve the relative name
    return relative(link, target);
  } catch (error) {
    err = error;
    if (err.code === 'EINVAL') {
      return null;
    } else {
      throw err;
    }
  }
};
