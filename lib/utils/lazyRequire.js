// Generated by CoffeeScript 2.3.0
var cush, fs, lazyRequire, matchVersion, path, semver, tarInstall, tarUrl, uhoh;

tarInstall = require('tar-install');

tarUrl = require('tar-url');

semver = require('semver');

path = require('path');

cush = require('../index');

uhoh = require('./uhoh');

fs = require('saxon/sync');

// TODO: when should packages be updated?
lazyRequire = async function(name, range = '*') {
  var dep, res, url, version;
  if (version = semver.valid(range) || matchVersion(name, range)) {
    dep = path.join(cush.PACKAGE_DIR, name + '-' + version);
  }
  if (!dep || !fs.exists(dep)) {
    cush.emit('log', {
      type: 'install',
      name,
      range
    });
    if (url = (await tarUrl(name, range))) {
      res = (await tarInstall(url, cush.PACKAGE_DIR));
      if (res.stderr) {
        if (cush.verbose) {
          console.error(res.stderr);
        }
        uhoh(`Failed to install: '${name}@${range}'`);
      } else {
        dep = res.path;
      }
    } else {
      uhoh(`Unknown version: '${name}@${range}'`);
    }
  }
  return require(dep);
};

// Try matching an existing version.
matchVersion = function(name, version) {
  var files, matcher, matches;
  try {
    files = fs.list(cush.PACKAGE_DIR);
  } catch (error) {}
  if (!files) {
    return null;
  }
  matcher = new RegExp(name + '-([0-9].+)');
  matches = files.map(function(file) {
    var ref;
    return (ref = matcher.exec(file)) != null ? ref[1] : void 0;
  }).filter(semver.valid);
  return semver.maxSatisfying(matches, version);
};

module.exports = lazyRequire;
